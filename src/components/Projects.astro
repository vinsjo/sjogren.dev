---
import { fetchRepos, type PartialRepo } from '@/utils/api/github-api';
import { formatURL } from '@/utils/misc';
import { PageSection } from '@/constants';
import Link from './Link.astro';
import Section from './Section.astro';

type Project = Pick<PartialRepo, 'name' | 'description' | 'homepage'> &
  Omit<Partial<PartialRepo>, 'name' | 'description' | 'homepage'>;

const projects: Project[] = [
  {
    name: 'eleonoreandersson.com',
    language: 'TypeScript',
    description: 'Portfolio website for Eleonore Andersson.',
    homepage: 'https://eleonoreandersson.com',
  },
];

await fetchRepos()
  .then((repos) => projects.push(...repos))
  .catch((err) => {
    if (process.env.NODE_ENV === 'development') {
      console.error(err);
    }
  });
---

<style>
  .section {
    height: fit-content;
    min-height: 0;
  }

  .card-grid {
    width: 100%;
    display: grid;
    align-content: center;
    justify-items: center;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));

    grid-auto-rows: 1fr;
    gap: 0.5rem;
  }

  .project-card {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: stretch;
    padding: 1rem;
    gap: 1rem;
    font-size: 0.8rem;
    min-width: 30ch;
    min-height: 8rem;
    background-color: var(--translucent);
  }

  .project-card__header {
    flex-shrink: 0;
  }

  .project-card__content {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .project-card__title {
    font-size: 1rem;
    font-weight: 500;
  }

  .project-card__language {
    text-transform: lowercase;
  }
  .project-card__description {
    line-height: 160%;
    margin-bottom: 0.5rem;
  }
</style>

<Section id={PageSection.Projects} class='section'>
  <h3 class='title'>Projects</h3>
  <div class='card-grid'>
    {
      projects.map(
        ({
          package_name,
          name,
          description,
          html_url: githubUrl,
          language,
          homepage,
        }) => {
          const displayName = package_name || name;
          const formattedHomePage = formatURL(homepage);

          const hasHomePage = !!formattedHomePage && !!homepage;

          return (
            <div class='project-card'>
              <div class='project-card__header'>
                {githubUrl ? (
                  <Link
                    class='project-card__title'
                    href={githubUrl}
                    target='_blank'
                    title='To GitHub Repository'
                  >
                    {displayName}
                  </Link>
                ) : (
                  <h4 class='project-card__title'>{displayName}</h4>
                )}
                {language && (
                  <p class='project-card__language'>
                    <small>Written in {language}</small>
                  </p>
                )}
              </div>
              <div class='project-card__content'>
                <p class='project-card__description'>{description}</p>
                {hasHomePage && (
                  <Link
                    href={homepage}
                    target='_blank'
                    title={`View project at ${homepage}`}
                  >
                    {formattedHomePage}
                  </Link>
                )}
              </div>
            </div>
          );
        },
      )
    }
  </div>
</Section>
